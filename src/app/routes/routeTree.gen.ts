/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './__root'
import { Route as MyPlaylistsRouteImport } from './my-playlists'
import { Route as MyPlaylistsIdRouteImport } from './my-playlists/$playlistsId'
import { Route as IndexRouteImport } from './index'
import { Route as OauthCallbackRouteImport } from './oauth/callback'

const MyPlaylistsIdRoute = MyPlaylistsIdRouteImport.update({
	id: '/my-playlists/$playlistId',
	path: '/my-playlists/$playlistId',
	getParentRoute: () => rootRouteImport
} as any)
const MyPlaylistsRoute = MyPlaylistsRouteImport.update({
	id: '/my-playlists',
	path: '/my-playlists',
	getParentRoute: () => rootRouteImport
} as any)
const IndexRoute = IndexRouteImport.update({
	id: '/',
	path: '/',
	getParentRoute: () => rootRouteImport
} as any)
const OauthCallbackRoute = OauthCallbackRouteImport.update({
	id: '/oauth/callback',
	path: '/oauth/callback',
	getParentRoute: () => rootRouteImport
} as any)

export interface FileRoutesByFullPath {
	'/': typeof IndexRoute
	'/my-playlists': typeof MyPlaylistsRoute
	'/my-playlists/$playlistId': typeof MyPlaylistsIdRoute
	'/oauth/callback': typeof OauthCallbackRoute
}
export interface FileRoutesByTo {
	'/': typeof IndexRoute
	'/my-playlists': typeof MyPlaylistsRoute
	'/my-playlists/$playlistId': typeof MyPlaylistsIdRoute
	'/oauth/callback': typeof OauthCallbackRoute
}
export interface FileRoutesById {
	__root__: typeof rootRouteImport
	'/': typeof IndexRoute
	'/my-playlists': typeof MyPlaylistsRoute
	'/my-playlists/$playlistId': typeof MyPlaylistsIdRoute
	'/oauth/callback': typeof OauthCallbackRoute
}
export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath
	fullPaths:
		| '/'
		| '/my-playlists'
		| '/oauth/callback'
		| '/my-playlists/$playlistId'
	fileRoutesByTo: FileRoutesByTo
	to: '/' | '/my-playlists' | '/oauth/callback' | '/my-playlists/$playlistId'
	id:
		| '__root__'
		| '/'
		| '/my-playlists'
		| '/oauth/callback'
		| '/my-playlists/$playlistId'
	fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute
	MyPlaylistsRoute: typeof MyPlaylistsRoute
	MyPlaylistsIdRoute: typeof MyPlaylistsIdRoute
	OauthCallbackRoute: typeof OauthCallbackRoute
}

declare module '@tanstack/react-router' {
	interface FileRoutesByPath {
		'/my-playlists': {
			id: '/my-playlists'
			path: '/my-playlists'
			fullPath: '/my-playlists'
			preLoaderRoute: typeof MyPlaylistsRouteImport
			parentRoute: typeof rootRouteImport
		}
		'/my-playlists/$playlistId': {
			id: '/my-playlists/$playlistId'
			path: '/my-playlists/$playlistId'
			fullPath: '/my-playlists/$playlistId'
			preLoaderRoute: typeof MyPlaylistsIdRouteImport
			parentRoute: typeof rootRouteImport
		}
		'/': {
			id: '/'
			path: '/'
			fullPath: '/'
			preLoaderRoute: typeof IndexRouteImport
			parentRoute: typeof rootRouteImport
		}
		'/oauth/callback': {
			id: '/oauth/callback'
			path: '/oauth/callback'
			fullPath: '/oauth/callback'
			preLoaderRoute: typeof OauthCallbackRouteImport
			parentRoute: typeof rootRouteImport
		}
	}
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	MyPlaylistsRoute: MyPlaylistsRoute,
	MyPlaylistsIdRoute: MyPlaylistsIdRoute,
	OauthCallbackRoute: OauthCallbackRoute
}
export const routeTree = rootRouteImport
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>()
